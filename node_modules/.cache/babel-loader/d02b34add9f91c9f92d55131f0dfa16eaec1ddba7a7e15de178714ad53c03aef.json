{"ast":null,"code":"var _jsxFileName = \"/Users/mickey/Uni/Semester_7/Projekt-Chatbot/Chatbot/src/components/Dashboard/AdvancedUserDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport groupService from '../../services/groupService';\nimport userService from '../../services/userService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdvancedUserDashboard() {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const [groupName, setGroupName] = useState('');\n  const [selectedGroupId, setSelectedGroupId] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [selectedUserId, setSelectedUserId] = useState('');\n\n  // Fetch all groups\n  useEffect(() => {\n    const fetchGroups = async () => {\n      try {\n        const groups = await groupService.getAllGroups();\n        setGroups(groups);\n      } catch (error) {\n        console.error('Failed to fetch groups', error);\n      }\n    };\n    fetchGroups();\n  }, []);\n\n  // Fetch all users\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const users = await userService.getAllUsers();\n        setUsers(users);\n      } catch (error) {\n        console.error('Failed to fetch users', error);\n      }\n    };\n    fetchUsers();\n  }, []);\n\n  // Create a new group\n  const createGroup = async () => {\n    try {\n      const response = await groupService.createGroup(groupName);\n      alert(response);\n      setGroupName('');\n      setGroups(prevGroups => [...prevGroups, {\n        id: response.id,\n        groupName\n      }]);\n    } catch (error) {\n      console.error('Failed to create group', error);\n      alert(error);\n    }\n  };\n\n  // Add a user to a group\n  const addUserToGroup = async () => {\n    if (!selectedGroupId || !selectedUserId) {\n      alert('Please select a group and a user');\n      return;\n    }\n    try {\n      const response = await groupService.addUserToGroup(selectedGroupId, selectedUserId);\n      alert(response);\n    } catch (error) {\n      console.error('Failed to add user to group', error);\n      alert(error);\n    }\n  };\n\n  // Delete a group\n  const deleteGroup = async groupId => {\n    try {\n      const response = await groupService.deleteGroup(groupId);\n      alert(response);\n      setGroups(prevGroups => prevGroups.filter(group => group.id !== groupId));\n    } catch (error) {\n      console.error('Failed to delete group', error);\n      alert(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Advanced User Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Group Name\",\n        value: groupName,\n        onChange: e => setGroupName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createGroup,\n        children: \"Create Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Manage Groups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: groups.map(group => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [group.groupName, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteGroup(group.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this)]\n        }, group.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add User to Group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedGroupId,\n        onChange: e => setSelectedGroupId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), groups.map(group => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: group.id,\n          children: group.groupName\n        }, group.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedUserId,\n        onChange: e => setSelectedUserId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user.id,\n          children: user.username\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addUserToGroup,\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n_s(AdvancedUserDashboard, \"hZJN/1rO20hDs9MsQP0K0EsdMWc=\");\n_c = AdvancedUserDashboard;\nexport default AdvancedUserDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdvancedUserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","groupService","userService","jsxDEV","_jsxDEV","AdvancedUserDashboard","_s","groups","setGroups","groupName","setGroupName","selectedGroupId","setSelectedGroupId","users","setUsers","selectedUserId","setSelectedUserId","fetchGroups","getAllGroups","error","console","fetchUsers","getAllUsers","createGroup","response","alert","prevGroups","id","addUserToGroup","deleteGroup","groupId","filter","group","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","user","username","_c","$RefreshReg$"],"sources":["/Users/mickey/Uni/Semester_7/Projekt-Chatbot/Chatbot/src/components/Dashboard/AdvancedUserDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport groupService from '../../services/groupService';\nimport userService from '../../services/userService';\n\nfunction AdvancedUserDashboard() {\n    const [groups, setGroups] = useState([]);\n    const [groupName, setGroupName] = useState('');\n    const [selectedGroupId, setSelectedGroupId] = useState(null);\n    const [users, setUsers] = useState([]);\n    const [selectedUserId, setSelectedUserId] = useState('');\n\n    // Fetch all groups\n    useEffect(() => {\n        const fetchGroups = async () => {\n            try {\n                const groups = await groupService.getAllGroups();\n                setGroups(groups);\n            } catch (error) {\n                console.error('Failed to fetch groups', error);\n            }\n        };\n        fetchGroups();\n    }, []);\n\n    // Fetch all users\n    useEffect(() => {\n        const fetchUsers = async () => {\n            try {\n                const users = await userService.getAllUsers();\n                setUsers(users);\n            } catch (error) {\n                console.error('Failed to fetch users', error);\n            }\n        };\n        fetchUsers();\n    }, []);\n\n    // Create a new group\n    const createGroup = async () => {\n        try {\n            const response = await groupService.createGroup(groupName);\n            alert(response);\n            setGroupName('');\n            setGroups((prevGroups) => [...prevGroups, { id: response.id, groupName }]);\n        } catch (error) {\n            console.error('Failed to create group', error);\n            alert(error);\n        }\n    };\n\n    // Add a user to a group\n    const addUserToGroup = async () => {\n        if (!selectedGroupId || !selectedUserId) {\n            alert('Please select a group and a user');\n            return;\n        }\n\n        try {\n            const response = await groupService.addUserToGroup(selectedGroupId, selectedUserId);\n            alert(response);\n        } catch (error) {\n            console.error('Failed to add user to group', error);\n            alert(error);\n        }\n    };\n\n    // Delete a group\n    const deleteGroup = async (groupId) => {\n        try {\n            const response = await groupService.deleteGroup(groupId);\n            alert(response);\n            setGroups((prevGroups) => prevGroups.filter((group) => group.id !== groupId));\n        } catch (error) {\n            console.error('Failed to delete group', error);\n            alert(error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Advanced User Dashboard</h1>\n\n            {/* Section to create a new group */}\n            <section>\n                <h2>Create Group</h2>\n                <input\n                    type=\"text\"\n                    placeholder=\"Group Name\"\n                    value={groupName}\n                    onChange={(e) => setGroupName(e.target.value)}\n                />\n                <button onClick={createGroup}>Create Group</button>\n            </section>\n\n            {/* Section to manage groups */}\n            <section>\n                <h2>Manage Groups</h2>\n                <ul>\n                    {groups.map((group) => (\n                        <li key={group.id}>\n                            {group.groupName}\n                            <button onClick={() => deleteGroup(group.id)}>Delete</button>\n                        </li>\n                    ))}\n                </ul>\n            </section>\n\n            {/* Section to add users to a group */}\n            <section>\n                <h2>Add User to Group</h2>\n                <select\n                    value={selectedGroupId}\n                    onChange={(e) => setSelectedGroupId(e.target.value)}\n                >\n                    <option value=\"\">Select Group</option>\n                    {groups.map((group) => (\n                        <option key={group.id} value={group.id}>\n                            {group.groupName}\n                        </option>\n                    ))}\n                </select>\n\n                <select\n                    value={selectedUserId}\n                    onChange={(e) => setSelectedUserId(e.target.value)}\n                >\n                    <option value=\"\">Select User</option>\n                    {users.map((user) => (\n                        <option key={user.id} value={user.id}>\n                            {user.username}\n                        </option>\n                    ))}\n                </select>\n\n                <button onClick={addUserToGroup}>Add User</button>\n            </section>\n        </div>\n    );\n}\n\nexport default AdvancedUserDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}