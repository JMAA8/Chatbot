{"ast":null,"code":"var _jsxFileName = \"/Users/mickey/Uni/Semester_7/Projekt-Chatbot/Chatbot/src/components/Dashboard/AdminDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport userService from '../../services/userService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const users = await userService.getAllUsers();\n        setUsers(users);\n      } catch (error) {\n        console.error('Failed to fetch users', error);\n      }\n    };\n    fetchUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.username, \" - \", user.roles.join(', ')]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminDashboard, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","userService","jsxDEV","_jsxDEV","AdminDashboard","_s","users","setUsers","fetchUsers","getAllUsers","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","username","roles","join","id","_c","$RefreshReg$"],"sources":["/Users/mickey/Uni/Semester_7/Projekt-Chatbot/Chatbot/src/components/Dashboard/AdminDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport userService from '../../services/userService';\n\nfunction AdminDashboard() {\n    const [users, setUsers] = useState([]);\n\n    useEffect(() => {\n        const fetchUsers = async () => {\n            try {\n                const users = await userService.getAllUsers();\n                setUsers(users);\n            } catch (error) {\n                console.error('Failed to fetch users', error);\n            }\n        };\n        fetchUsers();\n    }, []);\n\n    return (\n        <div>\n            <h1>Admin Dashboard</h1>\n            <ul>\n                {users.map((user) => (\n                    <li key={user.id}>\n                        {user.username} - {user.roles.join(', ')}\n                        {/* Add buttons for updating roles or deleting users */}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default AdminDashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMF,KAAK,GAAG,MAAML,WAAW,CAACQ,WAAW,CAAC,CAAC;QAC7CF,QAAQ,CAACD,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IACDF,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAS,QAAA,gBACIT,OAAA;MAAAS,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBb,OAAA;MAAAS,QAAA,EACKN,KAAK,CAACW,GAAG,CAAEC,IAAI,iBACZf,OAAA;QAAAS,QAAA,GACKM,IAAI,CAACC,QAAQ,EAAC,KAAG,EAACD,IAAI,CAACE,KAAK,CAACC,IAAI,CAAC,IAAI,CAAC;MAAA,GADnCH,IAAI,CAACI,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACX,EAAA,CA5BQD,cAAc;AAAAmB,EAAA,GAAdnB,cAAc;AA8BvB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}