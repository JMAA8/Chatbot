{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = '/groups'; // Basis-URL für Gruppen-Endpoints\n\n// Alle Gruppen abrufen\nexport const getAllGroups = async () => {\n  try {\n    const response = await axios.get(API_BASE_URL, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data; // Liste der Gruppen\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Fehler beim Abrufen der Gruppen.';\n  }\n};\n\n// Gruppe erstellen\nexport const createGroup = async groupName => {\n  try {\n    const response = await axios.post(API_BASE_URL, {\n      groupName\n    }, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data; // Erfolgsnachricht\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || 'Fehler beim Erstellen der Gruppe.';\n  }\n};\n\n// Benutzer zu Gruppe hinzufügen\nexport const addUserToGroup = async (groupId, userId) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/${groupId}/add-user/${userId}`, {}, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data; // Erfolgsnachricht\n  } catch (error) {\n    var _error$response3;\n    throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || 'Fehler beim Hinzufügen des Benutzers zur Gruppe.';\n  }\n};\n\n// Benutzer aus Gruppe entfernen\nexport const removeUserFromGroup = async (groupId, userId) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/${groupId}/remove-user/${userId}`, {}, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data; // Erfolgsnachricht\n  } catch (error) {\n    var _error$response4;\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || 'Fehler beim Entfernen des Benutzers aus der Gruppe.';\n  }\n};\n\n// Gruppe löschen\nexport const deleteGroup = async groupId => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/${groupId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data; // Erfolgsnachricht\n  } catch (error) {\n    var _error$response5;\n    throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || 'Fehler beim Löschen der Gruppe.';\n  }\n};\n\n// Gruppen, denen der Benutzer angehört (Basic_User spezifisch)\nexport const getJoinedGroups = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/joined`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data; // Liste der Gruppen, denen der Benutzer angehört\n  } catch (error) {\n    var _error$response6;\n    throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || 'Fehler beim Abrufen der beigetretenen Gruppen.';\n  }\n};\nexport default {\n  getAllGroups,\n  createGroup,\n  addUserToGroup,\n  removeUserFromGroup,\n  deleteGroup,\n  getJoinedGroups\n};","map":{"version":3,"names":["axios","API_BASE_URL","getAllGroups","response","get","headers","Authorization","localStorage","getItem","data","error","_error$response","createGroup","groupName","post","_error$response2","addUserToGroup","groupId","userId","put","_error$response3","removeUserFromGroup","_error$response4","deleteGroup","delete","_error$response5","getJoinedGroups","_error$response6"],"sources":["/Users/mickey/Uni/Semester_7/Projekt-Chatbot/Chatbot/src/services/groupService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = '/groups'; // Basis-URL für Gruppen-Endpoints\n\n// Alle Gruppen abrufen\nexport const getAllGroups = async () => {\n    try {\n        const response = await axios.get(API_BASE_URL, {\n            headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n        });\n        return response.data; // Liste der Gruppen\n    } catch (error) {\n        throw error.response?.data || 'Fehler beim Abrufen der Gruppen.';\n    }\n};\n\n// Gruppe erstellen\nexport const createGroup = async (groupName) => {\n    try {\n        const response = await axios.post(\n            API_BASE_URL,\n            { groupName },\n            {\n                headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n            }\n        );\n        return response.data; // Erfolgsnachricht\n    } catch (error) {\n        throw error.response?.data || 'Fehler beim Erstellen der Gruppe.';\n    }\n};\n\n// Benutzer zu Gruppe hinzufügen\nexport const addUserToGroup = async (groupId, userId) => {\n    try {\n        const response = await axios.put(\n            `${API_BASE_URL}/${groupId}/add-user/${userId}`,\n            {},\n            {\n                headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n            }\n        );\n        return response.data; // Erfolgsnachricht\n    } catch (error) {\n        throw error.response?.data || 'Fehler beim Hinzufügen des Benutzers zur Gruppe.';\n    }\n};\n\n// Benutzer aus Gruppe entfernen\nexport const removeUserFromGroup = async (groupId, userId) => {\n    try {\n        const response = await axios.put(\n            `${API_BASE_URL}/${groupId}/remove-user/${userId}`,\n            {},\n            {\n                headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n            }\n        );\n        return response.data; // Erfolgsnachricht\n    } catch (error) {\n        throw error.response?.data || 'Fehler beim Entfernen des Benutzers aus der Gruppe.';\n    }\n};\n\n// Gruppe löschen\nexport const deleteGroup = async (groupId) => {\n    try {\n        const response = await axios.delete(`${API_BASE_URL}/${groupId}`, {\n            headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n        });\n        return response.data; // Erfolgsnachricht\n    } catch (error) {\n        throw error.response?.data || 'Fehler beim Löschen der Gruppe.';\n    }\n};\n\n// Gruppen, denen der Benutzer angehört (Basic_User spezifisch)\nexport const getJoinedGroups = async () => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/joined`, {\n            headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n        });\n        return response.data; // Liste der Gruppen, denen der Benutzer angehört\n    } catch (error) {\n        throw error.response?.data || 'Fehler beim Abrufen der beigetretenen Gruppen.';\n    }\n};\n\nexport default {\n    getAllGroups,\n    createGroup,\n    addUserToGroup,\n    removeUserFromGroup,\n    deleteGroup,\n    getJoinedGroups,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}