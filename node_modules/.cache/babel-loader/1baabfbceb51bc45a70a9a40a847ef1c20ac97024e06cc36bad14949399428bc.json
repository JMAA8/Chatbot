{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080/user'; // Basis-URL für Benutzer-Endpoints\n\n// Alle Benutzer abrufen\nexport const getAllUsers = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/all`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data; // Liste der Benutzer\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Fehler beim Abrufen der Benutzer.';\n  }\n};\n\n// Benutzerprofil abrufen\nexport const getUserProfile = async username => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/profile`, {\n      params: {\n        username\n      },\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data; // Benutzerprofil\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || 'Fehler beim Abrufen des Benutzerprofils.';\n  }\n};\n\n// Benutzerprofil aktualisieren\nexport const updateUserProfile = async (username, updatedUser) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/profile`, updatedUser, {\n      params: {\n        username\n      },\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data; // Erfolgsnachricht\n  } catch (error) {\n    var _error$response3;\n    throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || 'Fehler beim Aktualisieren des Profils.';\n  }\n};\n\n// Benutzer löschen\nexport const deleteUser = async userId => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/${userId}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data; // Erfolgsnachricht\n  } catch (error) {\n    var _error$response4;\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || 'Fehler beim Löschen des Benutzers.';\n  }\n};\n\n// Rolle zu einem Benutzer hinzufügen\nexport const addRoleToUser = async (userId, roleName) => {\n  try {\n    const response = await axios.put(`${API_BASE_URL}/${userId}/add-role`, {}, {\n      params: {\n        roleName\n      },\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data; // Erfolgsnachricht\n  } catch (error) {\n    var _error$response5;\n    throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || 'Fehler beim Hinzufügen der Rolle.';\n  }\n};\n\n// Rolle von einem Benutzer entfernen\nexport const removeRoleFromUser = async (userId, roleName) => {\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/${userId}/remove-role`, {\n      params: {\n        roleName\n      },\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    return response.data; // Erfolgsnachricht\n  } catch (error) {\n    var _error$response6;\n    throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || 'Fehler beim Entfernen der Rolle.';\n  }\n};\nexport default {\n  getAllUsers,\n  getUserProfile,\n  updateUserProfile,\n  deleteUser,\n  addRoleToUser,\n  removeRoleFromUser\n};","map":{"version":3,"names":["axios","API_BASE_URL","getAllUsers","response","get","headers","Authorization","localStorage","getItem","data","error","_error$response","getUserProfile","username","params","_error$response2","updateUserProfile","updatedUser","put","_error$response3","deleteUser","userId","delete","_error$response4","addRoleToUser","roleName","_error$response5","removeRoleFromUser","_error$response6"],"sources":["/Users/mickey/Uni/Semester_7/Projekt-Chatbot/Chatbot/src/services/userService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8080/user'; // Basis-URL für Benutzer-Endpoints\n\n// Alle Benutzer abrufen\nexport const getAllUsers = async () => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/all`, {\n            headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n        });\n        return response.data; // Liste der Benutzer\n    } catch (error) {\n        throw error.response?.data || 'Fehler beim Abrufen der Benutzer.';\n    }\n};\n\n// Benutzerprofil abrufen\nexport const getUserProfile = async (username) => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/profile`, {\n            params: { username },\n            headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n        });\n        return response.data; // Benutzerprofil\n    } catch (error) {\n        throw error.response?.data || 'Fehler beim Abrufen des Benutzerprofils.';\n    }\n};\n\n// Benutzerprofil aktualisieren\nexport const updateUserProfile = async (username, updatedUser) => {\n    try {\n        const response = await axios.put(\n            `${API_BASE_URL}/profile`,\n            updatedUser,\n            {\n                params: { username },\n                headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n            }\n        );\n        return response.data; // Erfolgsnachricht\n    } catch (error) {\n        throw error.response?.data || 'Fehler beim Aktualisieren des Profils.';\n    }\n};\n\n// Benutzer löschen\nexport const deleteUser = async (userId) => {\n    try {\n        const response = await axios.delete(`${API_BASE_URL}/${userId}`, {\n            headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n        });\n        return response.data; // Erfolgsnachricht\n    } catch (error) {\n        throw error.response?.data || 'Fehler beim Löschen des Benutzers.';\n    }\n};\n\n// Rolle zu einem Benutzer hinzufügen\nexport const addRoleToUser = async (userId, roleName) => {\n    try {\n        const response = await axios.put(\n            `${API_BASE_URL}/${userId}/add-role`,\n            {},\n            {\n                params: { roleName },\n                headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n            }\n        );\n        return response.data; // Erfolgsnachricht\n    } catch (error) {\n        throw error.response?.data || 'Fehler beim Hinzufügen der Rolle.';\n    }\n};\n\n// Rolle von einem Benutzer entfernen\nexport const removeRoleFromUser = async (userId, roleName) => {\n    try {\n        const response = await axios.delete(`${API_BASE_URL}/${userId}/remove-role`, {\n            params: { roleName },\n            headers: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n        });\n        return response.data; // Erfolgsnachricht\n    } catch (error) {\n        throw error.response?.data || 'Fehler beim Entfernen der Rolle.';\n    }\n};\n\nexport default {\n    getAllUsers,\n    getUserProfile,\n    updateUserProfile,\n    deleteUser,\n    addRoleToUser,\n    removeRoleFromUser,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}