{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080/auth'; // Basis-URL für Auth-Endpoints\n\n// Login-Service\nexport const login = async (username, password) => {\n  try {\n    console.log('Methode login im authService try');\n    const response = await axios.post(`${API_BASE_URL}/login`, {\n      username,\n      password\n    });\n    console.log('authService: Erhaltenes Token:', response.data);\n    return response.data; // Enthält das Token\n  } catch (error) {\n    var _error$response;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Login fehlgeschlagen.';\n  }\n};\n\n// Registrierung-Service\nexport const register = async (username, password) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/register`, {\n      username,\n      password\n    });\n    return response.data; // Erfolgreiche Registrierung\n  } catch (error) {\n    var _error$response2;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || 'Registrierung fehlgeschlagen.';\n  }\n};\n\n// Token-Validierung (optional, falls im Backend ein entsprechender Endpunkt existiert)\nexport const validateToken = async token => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/validate`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data; // Gültigkeit des Tokens\n  } catch (error) {\n    var _error$response3;\n    throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || 'Token-Validierung fehlgeschlagen.';\n  }\n};\n\n// Logout-Service (lokal)\nexport const logout = () => {\n  localStorage.removeItem('token'); // Entfernt das Token aus dem lokalen Speicher\n};\nexport default {\n  login,\n  register,\n  validateToken,\n  logout\n};","map":{"version":3,"names":["axios","API_BASE_URL","login","username","password","console","log","response","post","data","error","_error$response","register","_error$response2","validateToken","token","get","headers","Authorization","_error$response3","logout","localStorage","removeItem"],"sources":["/Users/mickey/Uni/Semester_7/Projekt-Chatbot/Chatbot/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8080/auth'; // Basis-URL für Auth-Endpoints\n\n// Login-Service\nexport const login = async (username, password) => {\n    try {\n        console.log('Methode login im authService try');\n        const response = await axios.post(`${API_BASE_URL}/login`, { username, password });\n        console.log('authService: Erhaltenes Token:', response.data);\n        return response.data; // Enthält das Token\n    } catch (error) {\n        throw error.response?.data || 'Login fehlgeschlagen.';\n    }\n};\n\n// Registrierung-Service\nexport const register = async (username, password) => {\n    try {\n        const response = await axios.post(`${API_BASE_URL}/register`, { username, password });\n        return response.data; // Erfolgreiche Registrierung\n    } catch (error) {\n        throw error.response?.data || 'Registrierung fehlgeschlagen.';\n    }\n};\n\n// Token-Validierung (optional, falls im Backend ein entsprechender Endpunkt existiert)\nexport const validateToken = async (token) => {\n    try {\n        const response = await axios.get(`${API_BASE_URL}/validate`, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        return response.data; // Gültigkeit des Tokens\n    } catch (error) {\n        throw error.response?.data || 'Token-Validierung fehlgeschlagen.';\n    }\n};\n\n// Logout-Service (lokal)\nexport const logout = () => {\n    localStorage.removeItem('token'); // Entfernt das Token aus dem lokalen Speicher\n};\n\nexport default {\n    login,\n    register,\n    validateToken,\n    logout,\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,4BAA4B,CAAC,CAAC;;AAEnD;AACA,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC/C,IAAI;IACAC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IAC/C,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,YAAY,QAAQ,EAAE;MAAEE,QAAQ;MAAEC;IAAS,CAAC,CAAC;IAClFC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEC,QAAQ,CAACE,IAAI,CAAC;IAC5D,OAAOF,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACZ,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAI,uBAAuB;EACzD;AACJ,CAAC;;AAED;AACA,OAAO,MAAMG,QAAQ,GAAG,MAAAA,CAAOT,QAAQ,EAAEC,QAAQ,KAAK;EAClD,IAAI;IACA,MAAMG,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,YAAY,WAAW,EAAE;MAAEE,QAAQ;MAAEC;IAAS,CAAC,CAAC;IACrF,OAAOG,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAG,gBAAA;IACZ,MAAM,EAAAA,gBAAA,GAAAH,KAAK,CAACH,QAAQ,cAAAM,gBAAA,uBAAdA,gBAAA,CAAgBJ,IAAI,KAAI,+BAA+B;EACjE;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,aAAa,GAAG,MAAOC,KAAK,IAAK;EAC1C,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAMP,KAAK,CAACgB,GAAG,CAAC,GAAGf,YAAY,WAAW,EAAE;MACzDgB,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUH,KAAK;MAAG;IAChD,CAAC,CAAC;IACF,OAAOR,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAS,gBAAA;IACZ,MAAM,EAAAA,gBAAA,GAAAT,KAAK,CAACH,QAAQ,cAAAY,gBAAA,uBAAdA,gBAAA,CAAgBV,IAAI,KAAI,mCAAmC;EACrE;AACJ,CAAC;;AAED;AACA,OAAO,MAAMW,MAAM,GAAGA,CAAA,KAAM;EACxBC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;AACtC,CAAC;AAED,eAAe;EACXpB,KAAK;EACLU,QAAQ;EACRE,aAAa;EACbM;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}